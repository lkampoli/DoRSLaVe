## Pretrained model

```{python}
#| output: false
def classify_imagenet(paths, model_module, ModelClass, dims):
    images = [keras.utils.load_img(path, target_size=dims) for path in paths]
    image_array = np.array([keras.utils.img_to_array(img) for img in images])
    inputs = model_module.preprocess_input(image_array)

    model = ModelClass(weights="imagenet")
    Y_proba = model(inputs)
    top_k = model_module.decode_predictions(Y_proba, top=3)

    for image_index in range(len(images)):
        print(f"Image #{image_index}:")
        for class_id, name, y_proba in top_k[image_index]:
            print(f" {class_id} - {name} {int(y_proba*100)}%")
        print()
```


## Predicted classes (MobileNet)

::: columns
::: {.column width="15%"}
:::
::: {.column width="50%"}

<br><br>

```{python}
#| echo: false
#| warning: false
classify_imagenet(
    ["patrick-0.jpg", "umbrella-0.jpg", "hand-15.jpg"],
    keras.applications.mobilenet,
    keras.applications.mobilenet.MobileNet,
    (224, 224),
)
```
:::
::: {.column width="20%"}

<img src="patrick-0.jpg" data-lazy-loaded="" style="padding: 0px; margin: 0px">
<img src="umbrella-0.jpg" data-lazy-loaded="" style="padding: 0px; margin: 0px">
<img src="hand-15.jpg" data-lazy-loaded="" style="padding: 0px; margin=0px">

:::
::: {.column width="15%"}
:::
:::

## Predicted classes (MobileNetV2)

::: columns
::: {.column width="15%"}
:::
::: {.column width="50%"}

<br><br>

```{python}
#| echo: false
#| warning: false
classify_imagenet(
    ["patrick-0.jpg", "umbrella-0.jpg", "hand-15.jpg"],
    keras.applications.mobilenet_v2,
    keras.applications.mobilenet_v2.MobileNetV2,
    (224, 224),
)
```
:::
::: {.column width="20%"}

<img src="patrick-0.jpg" data-lazy-loaded="" style="padding: 0px; margin: 0px">
<img src="umbrella-0.jpg" data-lazy-loaded="" style="padding: 0px; margin: 0px">
<img src="hand-15.jpg" data-lazy-loaded="" style="padding: 0px; margin=0px">

:::
::: {.column width="15%"}
:::
:::

## Predicted classes (InceptionV3)

::: columns
::: {.column width="15%"}
:::
::: {.column width="50%"}

<br><br>

```{python}
#| echo: false
#| warning: false
classify_imagenet(
    ["patrick-0.jpg", "umbrella-0.jpg", "hand-15.jpg"],
    keras.applications.inception_v3,
    keras.applications.inception_v3.InceptionV3,
    (299, 299),
)
```
:::
::: {.column width="20%"}

<img src="patrick-0.jpg" data-lazy-loaded="" style="padding: 0px; margin: 0px">
<img src="umbrella-0.jpg" data-lazy-loaded="" style="padding: 0px; margin: 0px">
<img src="hand-15.jpg" data-lazy-loaded="" style="padding: 0px; margin=0px">

:::
::: {.column width="15%"}
:::
:::

## Predicted classes (MobileNet)

::: columns
::: {.column width="15%"}
:::
::: {.column width="50%"}

<br><br>

```{python}
#| echo: false
#| warning: false
classify_imagenet(
    ["charger-4.jpg", "table-tennis-17.jpg", "water-bottle-15.jpg"],
    keras.applications.mobilenet,
    keras.applications.mobilenet.MobileNet,
    (224, 224),
)
``` 
:::
::: {.column width="20%"}

<img src="charger-4.jpg" data-lazy-loaded="" style="padding: 0px; margin: 0px">
<img src="table-tennis-17.jpg" data-lazy-loaded="" style="padding: 0px; margin: 0px">
<img src="water-bottle-15.jpg" data-lazy-loaded="" style="padding: 0px; margin=0px">

:::
::: {.column width="15%"}
:::
:::

## Predicted classes (MobileNetV2)

::: columns
::: {.column width="15%"}
:::
::: {.column width="50%"}

<br><br>

```{python}
#| echo: false
#| warning: false
classify_imagenet(
    ["charger-4.jpg", "table-tennis-17.jpg", "water-bottle-15.jpg"],
    keras.applications.mobilenet_v2,
    keras.applications.mobilenet_v2.MobileNetV2,
    (224, 224),
)
```
:::
::: {.column width="20%"}

<img src="charger-4.jpg" data-lazy-loaded="" style="padding: 0px; margin: 0px">
<img src="table-tennis-17.jpg" data-lazy-loaded="" style="padding: 0px; margin: 0px">
<img src="water-bottle-15.jpg" data-lazy-loaded="" style="padding: 0px; margin=0px">

:::
::: {.column width="15%"}
:::
:::

## Predicted classes (InceptionV3)

::: columns
::: {.column width="15%"}
:::
::: {.column width="50%"}

<br><br>

```{python}
#| echo: false
#| warning: false
classify_imagenet(
    ["charger-4.jpg", "table-tennis-17.jpg", "water-bottle-15.jpg"],
    keras.applications.inception_v3,
    keras.applications.inception_v3.InceptionV3,
    (299, 299),
)
```
:::
::: {.column width="20%"}

<img src="charger-4.jpg" data-lazy-loaded="" style="padding: 0px; margin: 0px">
<img src="table-tennis-17.jpg" data-lazy-loaded="" style="padding: 0px; margin: 0px">
<img src="water-bottle-15.jpg" data-lazy-loaded="" style="padding: 0px; margin=0px">

:::
::: {.column width="15%"}
:::
:::

## Transfer learned model

```{python}
#| output: false
import tf_keras as keras
model_file = "teachable-machines/2024/3143/converted_keras/keras_model.h5"
model = keras.models.load_model(model_file)
```

```{python}
model.layers[0].layers[0].layers
```

```{python}
len(model.layers[0].layers[0].layers)
```

## The original pretrained model

<div style="overflow:auto; height: 90%">
<img src="mobilenet-model.png">
</div>