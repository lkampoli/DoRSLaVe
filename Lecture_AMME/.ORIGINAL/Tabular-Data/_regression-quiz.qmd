
# Quiz {visibility="uncounted"}

## Critique this ðŸ’© regression code

```{python}
#| echo: false
import numpy
import keras

numpy.random.seed(123)
x = numpy.random.rand(100)
y = 1_000 * numpy.random.rand(100)
z = 2 * x + 0.001 * y + 1 + 1 * numpy.random.rand(100)

# X = np.c_[x, y]
# features = X
features = pandas.DataFrame({"$x_1$": x, "$x_2$": y})
targets = z
```

```{python}
#| echo: false
from keras.callbacks import EarlyStopping
# tf.get_logger().setLevel('ERROR')
```

```{python}
X_train = features[:80]; X_test = features[81:]
y_train = targets[:80]; y_test = targets[81:]
```
```{python}
model = Sequential([
   Input((2,)),
  Dense(32, activation='relu'),
   Dense(32, activation='relu'),
  Dense(1, activation='sigmoid')
])
model.compile(optimizer="adam", loss='mse')
es = EarlyStopping(patience=10)
fitted_model = model.fit(X_train, y_train, epochs=5,
  callbacks=[es], verbose=False)
```
```{python}
trainMAE = model.evaluate(X_train, y_train, verbose=False)
hist = model.fit(X_test, y_test, epochs=5,
  callbacks=[es], verbose=False)
hist.history["loss"]
testMAE = model.evaluate(X_test, y_test, verbose=False)
```

```{python}
f"Train MAE: {testMAE:.2f} Test MAE: {trainMAE:.2f}"
```

## The data

```{python}
#| echo: false
set_square_figures()
```

::: columns
::: column
```{python}
plt.scatter(x, y, c=targets)
plt.colorbar()
```
:::
::: column
```{python}
plt.hist(targets, bins=20);
```

:::
:::
